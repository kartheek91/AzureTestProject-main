# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: 'windows-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  solution: '**/RoundTheCode.AzureTestProject.sln'
  project: '**/RoundTheCode.AzureTestProject.csproj'
steps:
  - task: NuGetToolInstaller@1
    name: 'NuGetToolInstaller'
    displayName: 'NuGet tool installer'

  - task: NuGetCommand@2
    name: 'NuGetRestore'
    displayName: 'NuGet restore packages'
    inputs:
      command: 'restore'
      restoreSolution: '$(solution)'
      feedsToUse: 'select'

  - task: DotNetCoreCLI@2
    name: 'Tests'
    displayName: 'Run tests'
    inputs:
      command: 'test'
      projects: '$(solution)'
      arguments: '--configuration $(BuildConfiguration)'

  - task: DotNetCoreCLI@2
    name: 'Publish'
    displayName: 'Publish'
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: '$(project)'
      arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      zipAfterPublish: false
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
  - task: CopyPublishBuildArtifacts@1
    inputs:
      CopyRoot: '**/'
      Contents: 'dockerfile'
      ArtifactName: 'drop'
      ArtifactType: 'FilePath'
  
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: 'drop'
      path: '$(Build.ArtifactStagingDirectory)'
      downloadPath: '$(Build.ArtifactStagingDirectory)/drop'
      
  - task: Docker@2
    displayName: Login to ACR
    inputs:
      command: login
      containerRegistry: Docker-Service-Connection
  - task: Docker@2
    inputs:
      containerRegistry: 'Docker-Service-Connection'
      command: 'build'
      Dockerfile: '$(Build.ArtifactStagingDirectory)/dockerfile'
      tags: 'my-image:$(Build.BuildId)'
  - task: Docker@2
    inputs:
      containerRegistry: 'Docker-Service-Connection'
      command: 'push'
      imageName: 'my-image:$(Build.BuildId)'